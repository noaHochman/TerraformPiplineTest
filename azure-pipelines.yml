stages:
- stage: validate
  jobs:
  - job: validate
    continueOnError: false
    steps:
    - task: TerraformInstaller@0
      displayName: 'install terraform'
      inputs:
        terraformVersion: 'latest'

    - task: TerraformCLI@0
      displayName: 'tf init'
      inputs:
        command: 'init'
        backendType: 'azurerm'
        backendAzureRmResourceGroupName: 'noa-terraformTST'
        backendAzureRmStorageAccountName: 'terraformpipelinetst'
        backendAzureRmContainerName: 'tfpiplines'
        backendAzureRmKey: 'terraform.tfstate'
        allowTelemetryCollection: true
        workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'

    - task: TerraformCLI@0
      displayName: 'tf validate'
      inputs:
        backendType: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
        allowTelemetryCollection: true
        
        
- stage: deploy
  jobs:
  - deployment: deploy_terraform
    continueOnError: false
    environment: dev
    strategy: 
     runOnce:
       deploy:
         steps:
           - checkout: self
           
           - task: TerraformInstaller@0
             displayName: 'install terraform'
             inputs:
               terraformVersion: 'latest'

           - task: TerraformCLI@0
             displayName: 'tf init'
             inputs:
               backendType: 'azurerm'
               command: 'init'
               backendAzureRmResourceGroupName: 'noa-terraformTST'
               backendAzureRmStorageAccountName: 'terraformpipelinetst'
               backendAzureRmContainerName: 'tfpiplines'
               backendAzureRmKey: 'terraform.tfstate'
               allowTelemetryCollection: true
               workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'

           - task: TerraformCLI@0
             displayName: 'tf plan'
             inputs:
               backendType: 'azurerm'
               command: 'plan'
               workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
               environmentServiceName: 'SPTerraformTST'
               allowTelemetryCollection: true

           - task: TerraformCLI@0
             displayName: 'tf apply'
             inputs:
               backendType: 'azurerm'
               command: 'apply'
               workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
               environmentServiceName: 'SPTerraformTST'
               allowTelemetryCollection: true
               